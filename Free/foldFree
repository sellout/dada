    let Monad =
          https://raw.githubusercontent.com/FormationAI/dhall-bhat/8afbcee6dfd092764df9e9456fe2a2650748dce2/Monad/Type

in  let Monad/package =
          https://raw.githubusercontent.com/FormationAI/dhall-bhat/6f66fc588c9d49a662794a32b29962341c373eb4/Monad/package.dhall
    
in    λ(f : Type → Type)
    → λ(g : Type → Type)
    → λ(monad : Monad g)
    → λ(a : Type)
    → λ(n : ∀(x : Type) → f x → g x)
    → (./recursive f a).cata
      (g a)
      (   λ(free : ./../FreeF/Type f a (g a))
        → merge
          { Pure =
              monad.pure a
          , Free =
              λ(q : f (g a)) → (Monad/package g monad).join a (n (g a) q)
          }
          free
      )
